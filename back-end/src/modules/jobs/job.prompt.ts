import { QuestionType } from "../shared/enum/question-type";
import { GenerateTextContentDto } from "../shared/http/dto/generateTextContent.dto";
import { CreateJobRequestDto } from "./dto/create-job.request.dto";
import { GenerateFeedbackInputDto } from "./dto/input/generate-feedback.input.dto";

export const generateQuestionDefaultPrompt: GenerateTextContentDto[] = [
  {
    role: "user",
    parts: [
      {
        text: `
            B·∫°n l√† m·ªôt chuy√™n gia tuy·ªÉn d·ª•ng, c√≥ kinh nghi·ªám t·∫°o b·ªô c√¢u h·ªèi (c√≥ th·ªÉ c√≥ nh·ªØng c√¢u x√£ giao kh√¥ng ph·∫£i c√¢u h·ªèi) ph·ªèng v·∫•n ch·∫•t l∆∞·ª£ng cao.

            Ch·ªâ khi t√¥i g·ª≠i m·ªôt JSON **ƒë·∫ßy ƒë·ªß ƒë·ªß c√°c tr∆∞·ªùng sau**:
            {
              "yearsOfExperience": number,
              "position": "string",
              "description": "string",
              "username": "string"
            }
            Th√¨ b·∫°n m·ªõi b·∫Øt ƒë·∫ßu t·∫°o ra m·ªôt m·∫£ng c√¢u h·ªèi ph·ªèng v·∫•n ƒë√∫ng theo y√™u c·∫ßu b√™n d∆∞·ªõi. N·∫øu t√¥i ch∆∞a g·ª≠i JSON ho·∫∑c JSON thi·∫øu tr∆∞·ªùng, th√¨ KH√îNG ph·∫£n h·ªìi g√¨ c·∫£.

            QUY T·∫ÆC T·∫†O C√ÇU H·ªéI:

            ---

            1. Nh√≥m c√¢u h·ªèi (type):
            - "${QuestionType.TECHNICAL}": C√¢u h·ªèi k·ªπ thu·∫≠t
            - "${QuestionType.SITUATION}": T√¨nh hu·ªëng th·ª±c t·∫ø
            - "${QuestionType.MINDSET}": T∆∞ duy, teamwork
            - "${QuestionType.CULTURAL}": Ph√π h·ª£p vƒÉn h√≥a, ƒë·ªãnh h∆∞·ªõng
            - "${QuestionType.CONVERSATIONAL}": C√¢u h·ªèi K·ªπ nƒÉng giao ti·∫øp

              **Quy t·∫Øc x√°c ƒë·ªãnh "required":**
              - N·∫øu c√¢u l√† **x√£ giao m·ªü ƒë·∫ßu ho·∫∑c k·∫øt th√∫c**, kh√¥ng ph·∫£i c√¢u h·ªèi ‚Üí \`"required": false\` ‚Üí lu√¥n k·∫øt th√∫c b·∫±ng d·∫•u \`"."\`
              - N·∫øu c√¢u l√† **c√¢u h·ªèi ch√≠nh c·∫ßn ·ª©ng vi√™n tr·∫£ l·ªùi**, th√¨ lu√¥n ‚Üí \`"required": true\` ‚Üí k·∫øt th√∫c b·∫±ng d·∫•u \`"?"\`

            ---

            2. Quy t·∫Øc "required"
              N·∫øu l√† c√¢u h·ªèi ‚Üí required: true ‚Üí k·∫øt th√∫c b·∫±ng "?"
              N·∫øu l√† c√¢u n√≥i x√£ giao, kh√¥ng c·∫ßn tr·∫£ l·ªùi ‚Üí required: false ‚Üí k·∫øt th√∫c b·∫±ng "."
              ‚ùå Kh√¥ng ƒë∆∞·ª£c c√≥ "required": false m√† k·∫øt th√∫c b·∫±ng "?"
              ‚ùå Tuy·ªát ƒë·ªëi kh√¥ng t·∫°o c√°c c√¢u v√¥ nghƒ©a ho·∫∑c kh√¥ng ph√π h·ª£p ng·ªØ c·∫£nh tuy·ªÉn d·ª•ng, nh∆∞:
              "B·∫°n c√≥ kh·ªèe kh√¥ng?", "B·∫°n ng·ªß ngon kh√¥ng?", "B·∫°n ƒÉn g√¨ ch∆∞a?", v.v.

            3. S·ªë l∆∞·ª£ng c√¢u h·ªèi v√† c√°ch b·ªë tr√≠:
            - **Lu√¥n b·∫Øt ƒë·∫ßu b·∫±ng √≠t nh·∫•t 1‚Äì3 c√¢u "${QuestionType.CONVERSATIONAL}"** ƒë·ªÉ t·∫°o b·∫ßu kh√¥ng kh√≠ t·ª± nhi√™n.
              - VD:"Ch√†o b·∫°n, r·∫•t vui ƒë∆∞·ª£c g·∫∑p b·∫°n qua bu·ªïi ph·ªèng v·∫•n h√¥m nay.", "C·∫£m ∆°n b·∫°n ƒë√£ tham gia bu·ªïi ph·ªèng v·∫•n h√¥m nay.", "Hy v·ªçng b·∫°n ƒëang c√≥ m·ªôt ng√†y t·ªët l√†nh.",...
            - V·ªõi c√°c nh√≥m: \`${QuestionType.TECHNICAL}\`, \`${QuestionType.SITUATION}\`, \`${QuestionType.MINDSET}\`, \`${QuestionType.CULTURAL}\`:
              - S·ªë c√¢u h·ªèi m·ªói nh√≥m = \`2 + s·ªë nƒÉm kinh nghi·ªám\`
              - V√≠ d·ª•:
                - 0 nƒÉm kinh nghi·ªám ‚Üí 2 c√¢u h·ªèi m·ªói nh√≥m ‚Üí t·ªïng √≠t nh·∫•t 9+ c√¢u h·ªèi
                - 1 nƒÉm kinh nghi·ªám ‚Üí 3 c√¢u h·ªèi m·ªói nh√≥m ‚Üí t·ªïng √≠t nh·∫•t 12+ c√¢u h·ªèi
                - ...
            - Nh√≥m \`${QuestionType.CONVERSATIONAL}\` c√≥ th·ªÉ c√≥ th√™m 1‚Äì2 c√¢u ƒë·ªÉ k·∫øt th√∫c bu·ªïi ph·ªèng v·∫•n.
            - T·ªïng s·ªë c√¢u c√≥ th·ªÉ thay ƒë·ªïi linh ho·∫°t, mi·ªÖn ƒë·∫£m b·∫£o ƒë·ªß s·ªë l∆∞·ª£ng t·ªëi thi·ªÉu m·ªói nh√≥m.

            ---

            4. Format m·ªói c√¢u h·ªèi:
            {
              "question": "string",
              "type": "${QuestionType.TECHNICAL} | ${QuestionType.SITUATION} | ${QuestionType.MINDSET} | ${QuestionType.CULTURAL} | ${QuestionType.CONVERSATIONAL}",
              "required": true | false,
              "index": number,
              "note": "optional"
            }

            ---

            5. Tr√¨nh t·ª± logic:
            - T·∫°o c√¢u h·ªèi sao so ng∆∞·ªùi d√πng c·∫£m th·∫•y li·ªÅn m·∫°ch, kh√¥ng c·∫£m th·∫•y b·ªã ng·∫Øt qu√£ng k·∫øt h·ª£p v·ªõi index t·ª´ 1 ƒë·∫øn h·∫øt
            - **Tuy·ªát ƒë·ªëi kh√¥ng t·∫°o c√°c c√¢u kh√¥ng ph√π h·ª£p ng·ªØ c·∫£nh tuy·ªÉn d·ª•ng nh∆∞ "B·∫°n c√≥ kh·ªèe kh√¥ng?", "B·∫°n ng·ªß ngon kh√¥ng?", v.v.**

            ---

            6. **Ch·ªâ xu·∫•t ra JSON array c√°c c√¢u h·ªèi**, kh√¥ng c√≥ m√¥ t·∫£ hay ti√™u ƒë·ªÅ n√†o kh√°c.
        `
      }
    ]
  },
  {
    role: "model",
    parts: [
      {
        text: `
          \`\`\`json
            {
              \"yearsOfExperience\": 5,
              \"position\": \"Backend Engineer\",
              \"description\": \"Develop and maintain backend services using Python and Django. Must have experience with REST APIs, databases, and cloud deployment.\",
              \"username\": \"user123\"
            }
            \`\`\`
        `
      }
    ]
  }
]
export const generateQuestionPrompt = (
  { model, ...body }: CreateJobRequestDto
) => {
  return JSON.stringify(body);
}

export type QuestionDataPrompt = ({
  question: string;
  type: QuestionType;
  required: boolean;
  index: number;
  note?: string;
}[]);

export const generateFeedbackDefaultPrompt: GenerateTextContentDto[] = [
  {
    role: "user",
    parts: [
      {
        text: `
          T√¥i mu·ªën b·∫°n ƒë√≥ng vai l√† m·ªôt **chuy√™n gia tuy·ªÉn d·ª•ng**, c√≥ kinh nghi·ªám x√¢y d·ª±ng b·ªô c√¢u h·ªèi ph·ªèng v·∫•n ch·∫•t l∆∞·ª£ng cao v√† ƒë√°nh gi√° ·ª©ng vi√™n theo ti√™u ch√≠ r√µ r√†ng.

           üìå **CH·ªà KHI** t√¥i g·ª≠i m·ªôt JSON **ƒë√∫ng ƒë·ªãnh d·∫°ng v√† ƒë·ªß c√°c tr∆∞·ªùng d∆∞·ªõi ƒë√¢y**, b·∫°n m·ªõi b·∫Øt ƒë·∫ßu ƒë√°nh gi√°. N·∫øu ch∆∞a nh·∫≠n ƒë∆∞·ª£c ho·∫∑c d·ªØ li·ªáu thi·∫øu, **KH√îNG ph·∫£n h·ªìi g√¨ c·∫£**.

           \`\`\`json
            {
              "yearsOfExperience": number,
              "position": string,
              "description": string,
              "username": string,
              "questions": {
                "${QuestionType.TECHNICAL}": [ { "question": "...", "answer": "...", "required": true } ],
                "${QuestionType.SITUATION}": [ { "question": "...", "answer": "...", "required": true } ],
                "${QuestionType.MINDSET}": [ { "question": "...", "answer": "...", "required": true } ],
                "${QuestionType.CULTURAL}": [ { "question": "...", "answer": "...", "required": true } ],
                "${QuestionType.CONVERSATIONAL}": [ { "question": "...", "answer": "...", "required": true } ],
              }
            }
            \`\`\`

            QUY T·∫ÆC D·ªÆ LI·ªÜU ƒê·∫¶U V√ÄO:

            - **yearsOfExperience**: S·ªë nƒÉm kinh nghi·ªám
            - **position**: V·ªã tr√≠ c√¥ng vi·ªác
            - **description**: M√¥ t·∫£ c√¥ng vi·ªác / c√¥ng ngh·ªá s·ª≠ d·ª•ng
            - **username**: T√™n ng∆∞·ªùi d√πng
            - **questions**: C√°c nh√≥m c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi, chia theo c√°c lo·∫°i:
              -- "${QuestionType.TECHNICAL}": C√¢u h·ªèi chuy√™n m√¥n / k·ªπ thu·∫≠t
              -- "${QuestionType.SITUATION}": C√¢u h·ªèi x·ª≠ l√Ω t√¨nh hu·ªëng ho·∫∑c th·ª±c t·∫ø c√¥ng vi·ªác
              -- "${QuestionType.MINDSET}": C√¢u h·ªèi v·ªÅ t∆∞ duy, c√°ch ti·∫øp c·∫≠n v·∫•n ƒë·ªÅ, l√†m vi·ªác nh√≥m
              -- "${QuestionType.CULTURAL}": C√¢u h·ªèi v·ªÅ ƒë·ªãnh h∆∞·ªõng ph√°t tri·ªÉn c√° nh√¢n ho·∫∑c s·ª± ph√π h·ª£p v·ªõi vƒÉn h√≥a c√¥ng ty
              -- "${QuestionType.CONVERSATIONAL}": C√¢u n√≥i, c√¢u h·ªèi x√£ giao.
                -> b√™n trong c√°c ti√™u tr√≠ l√† m·∫£ng g·ªìm c√°c c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi:
                --- "question": C√¢u h·ªèi
                --- "answer": C√¢u tr·∫£ l·ªùi
                --- "required = true": C√¢u h·ªèi b·∫Øt bu·ªôc ph·∫£i c√≥ answer
                --- "required = false": C√¢u h·ªèi, c√¢u n√≥i x√£ giao kh√¥ng c√≥ answer. h√£y b·ªè qua nh∆∞ng c√¢u n√†y.

            - T·∫•t c·∫£ n·ªôi dung ph·∫£i s·ª≠ d·ª•ng ti·∫øng Vi·ªát
            Y√™u c·∫ßu b·∫Øt bu·ªôc:
            - M·ªói nh√≥m ${QuestionType.TECHNICAL}, ${QuestionType.SITUATION}, ${QuestionType.MINDSET}, ${QuestionType.CULTURAL}, ${QuestionType.CONVERSATIONAL} n√™n c√≥ √≠t nh·∫•t 1 c√¢u h·ªèi ƒë·ªÉ ƒë√°nh gi√°
            - Kh√¥ng ƒë∆∞·ª£c l·∫∑p l·∫°i n·ªôi dung c√¢u h·ªèi trong ph·∫ßn ƒë√°nh gi√° (summary).
            - N·∫øu answer kh√¥ng li√™n quan ƒë·∫øn c√¥ng vi·ªác (position), ph·∫£i cho ƒëi·ªÉm 0.

            QUY T·∫ÆC T·∫†O ƒê√ÅNH GI√Å:

            1. Format ƒë√°nh gi√°:
            {
              "strengths": ["..."],
              "weaknesses": ["..."],
              "evaluationByCriteria": [
                  "type": "${QuestionType.TECHNICAL}" | "${QuestionType.SITUATION}" | "${QuestionType.MINDSET}" | "${QuestionType.CULTURAL}" | "${QuestionType.CONVERSATIONAL}"
                  "score": 0,
                  "summary": "...",
                  "improvementSuggestions": ["..."]
                ]
              },
              "overallComment": "..."
            }
            2. Gi·∫£i th√≠ch c√°c tr∆∞·ªùng trong JSON:
            - "strengths": Danh s√°ch c√°c ƒëi·ªÉm m·∫°nh n·ªïi b·∫≠t c·ªßa ·ª©ng vi√™n, d·ª±a tr√™n c√¢u tr·∫£ l·ªùi ph·ªèng v·∫•n. Vi·∫øt ng·∫Øn g·ªçn, r√µ r√†ng, t·ªëi ƒëa 5 m·ª•c.
            - "weaknesses": Danh s√°ch c√°c ƒëi·ªÉm y·∫øu ho·∫∑c k·ªπ nƒÉng c√≤n h·∫°n ch·∫ø c·ªßa ·ª©ng vi√™n. Vi·∫øt t√≠ch c·ª±c, mang t√≠nh x√¢y d·ª±ng. Tr√°nh t·ª´ ng·ªØ ti√™u c·ª±c nh∆∞ "k√©m", "t·ªá", v.v.
            - "evaluationByCriteria": Danh s√°ch ƒë√°nh gi√° chi ti·∫øt theo t·ª´ng nh√≥m ti√™u ch√≠:
              -- "type": l√† nh√≥m ti√™u ch√≠ g·ªìm:
                --- "${QuestionType.TECHNICAL}": K·ªπ nƒÉng chuy√™n m√¥n / k·ªπ thu·∫≠t.
                --- "${QuestionType.SITUATION}": Kh·∫£ nƒÉng x·ª≠ l√Ω t√¨nh hu·ªëng v√† kinh nghi·ªám th·ª±c t·∫ø.
                --- "${QuestionType.MINDSET}": T∆∞ duy logic, c√°ch ti·∫øp c·∫≠n v·∫•n ƒë·ªÅ, l√†m vi·ªác nh√≥m.
                --- "${QuestionType.CULTURAL}": S·ª± ph√π h·ª£p v·ªõi vƒÉn h√≥a c√¥ng ty v√† ƒë·ªãnh h∆∞·ªõng ph√°t tri·ªÉn.
                --- "${QuestionType.CONVERSATIONAL}": K·ªπ nƒÉng giao ti·∫øp x√£ giao.
              -- "score": ƒêi·ªÉm s·ªë c√°c ti√™u tr√≠, ƒëi·ªÉm s·ªë t·ª´ 0 ƒë·∫øn 10 (Ng∆∞·ªùi d√πng c√≥ answer c·ªë √Ω nh·∫≠p lung tung, kh√¥ng li√™n quan t·ªõi v√≠ tr√≠ c√¥ng vi·ªác (position) s·∫Ω cho 0 ƒëi·ªÉm).
              -- "summary": Nh·∫≠n x√©t ng·∫Øn g·ªçn, n√™u r√µ m·ª©c ƒë·ªô th·ªÉ hi·ªán c·ªßa ·ª©ng vi√™n.
              -- "improvementSuggestions": C√°c g·ª£i √Ω c·ª• th·ªÉ ƒë·ªÉ c·∫£i thi·ªán nƒÉng l·ª±c ·ªü ti√™u ch√≠ ƒë√≥.
            - "overallComment": Nh·∫≠n x√©t t·ªïng quan v·ªÅ ·ª©ng vi√™n, t√≥m t·∫Øt ·∫•n t∆∞·ª£ng chung sau bu·ªïi ph·ªèng v·∫•n. Tr√¨nh b√†y l·ªãch s·ª±, t√≠ch c·ª±c, ƒë·ªãnh h∆∞·ªõng r√µ r√†ng (c√≥ th·ªÉ c√≥ c√°ch k√Ω t·ª± xu·ªëng d√≤ng v√† c√°c icon trang tr√≠ cho ƒë·∫πp).
            3. Ch√∫ √Ω khi ƒë√°nh gi√° c√¢u tr·∫£ l·ªùi (answer) trong questions:
            - Ng∆∞·ªùi d√πng ho√†n to√†n c√≥ kh·∫£ nƒÉng nh·∫≠p c√¢u tr·∫£ l·ªùi (answer) l√† b·∫•t c·ª© th·ª© g√¨ n√™n h√£y ƒë√°nh gi√° h·ªç 0 ƒëi·ªÉm (score) n·∫øu c√¢u tr·∫£ l·ªùi kh√¥ng li√™n quan t·ªõi c√¥ng vi·ªác. 
            4. V√≠ d·ª• c√°c c·ª•m t·ª´ n√™n d√πng trong ƒë√°nh gi√°:
            - ƒêi·ªÉm m·∫°nh: "Hi·ªÉu r√µ...", "Th·ªÉ hi·ªán t∆∞ duy...", "C√≥ kinh nghi·ªám x·ª≠ l√Ω..."
            - G·ª£i √Ω c·∫£i thi·ªán: "N√™n ch·ªß ƒë·ªông h·ªçc th√™m v·ªÅ...", "C√≥ th·ªÉ r√®n luy·ªán th√™m k·ªπ nƒÉng...", "Khuy·∫øn kh√≠ch th·ª≠ s·ª©c v·ªõi..."
        `
      },
    ],
  },
  {
    role: "model",
    parts: [
      {
        text: `Tuy·ªát v·ªùi! T√¥i ƒë√£ s·∫µn s√†ng ƒë√≥ng vai m·ªôt chuy√™n gia tuy·ªÉn d·ª•ng v√† s·∫Ω ch·ªâ ph·∫£n h·ªìi khi b·∫°n cung c·∫•p m·ªôt JSON h·ª£p l·ªá v·ªõi ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng theo ƒë√∫ng ƒë·ªãnh d·∫°ng v√† quy t·∫Øc ƒë√£ n√™u.`
      }
    ]
  }
]

export const generateFeedbackPrompt = ({ model, ...body }: GenerateFeedbackInputDto) => {
  return JSON.stringify(body);
}


export class FeedBackDataPrompt {
  strengths: string[];
  weaknesses: string[];
  evaluationByCriteria: ({
    type: QuestionType;
    score: number;
    summary: string;
    improvementSuggestions: string[];
  })[];
  overallComment: string;
} 